{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Documents\\\\PIAIC\\\\pana\\\\Erc20\\\\truffle\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { web3init, web3Reload } from './store/connectSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const address = useSelector(state => {\n    return state.connectReducer.address;\n  });\n  const accessMsg = useSelector(state => {\n    return state.connectReducer.msg;\n  });\n  const [name, setName] = useState(null);\n  const [email, setEmail] = useState(null);\n  const web3 = useSelector(state => {\n    return state.connectReducer.web3;\n  });\n  const dispatch = useDispatch();\n\n  const signmsg = async () => {\n    if (name != null && email != null) {\n      return await web3.eth.personal.sign(web3.utils.utf8ToHex(name) + web3.utils.utf8ToHex(email), address, \"test password!\");\n    }\n  };\n\n  useEffect(() => {\n    dispatch(web3Reload());\n  }, []); // const currentAccount = async () => {\n  //   await web3.personal.sign(web3.fromUtf8(\"Hello from Toptal!\"), web3.eth.coinbase, console.log);\n  // }\n\n  const connectWallet = () => {\n    console.log(\"button\");\n    dispatch(web3init());\n    console.log(address);\n  };\n\n  console.log(address);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\"Address\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 14\n    }, this), address, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this), name, /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Sign-Up Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Name \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => {\n          e.preventDefault();\n          setName(e.target.value);\n        },\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Email \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => connectWallet(),\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: async () => signmsg(),\n      children: \"Sign\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 60\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: accessMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"LsS5BJYjMa3OQ8Miy5OrCQLL3Sk=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Acer/Documents/PIAIC/pana/Erc20/truffle/client/src/App.js"],"names":["useDispatch","useSelector","useEffect","useState","web3init","web3Reload","App","address","state","connectReducer","accessMsg","msg","name","setName","email","setEmail","web3","dispatch","signmsg","eth","personal","sign","utils","utf8ToHex","connectWallet","console","log","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\r\nimport './App.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\nimport { web3init, web3Reload } from './store/connectSlice';\r\n\r\nfunction App() {\r\n  const address = useSelector((state) => {\r\n    return state.connectReducer.address\r\n  })\r\n  const accessMsg = useSelector((state) => {\r\n    return state.connectReducer.msg\r\n  })\r\n\r\n  const [name, setName] = useState(null)\r\n  const [email, setEmail] = useState(null)\r\n\r\n  const web3 = useSelector((state) => {\r\n    return state.connectReducer.web3\r\n  })\r\n  const dispatch = useDispatch()\r\n  const signmsg = async () => {\r\n    if (name != null && email != null) {\r\n      return await web3.eth.personal.sign(web3.utils.utf8ToHex(name) + web3.utils.utf8ToHex(email), address, \"test password!\")\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    dispatch(web3Reload())\r\n\r\n  }, []);\r\n\r\n  // const currentAccount = async () => {\r\n  //   await web3.personal.sign(web3.fromUtf8(\"Hello from Toptal!\"), web3.eth.coinbase, console.log);\r\n\r\n  // }\r\n\r\n  const connectWallet = () => {\r\n    console.log(\"button\")\r\n\r\n    dispatch(web3init())\r\n    console.log(address)\r\n\r\n  }\r\n\r\n  console.log(address)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      Address<br></br>\r\n      {address}<br></br>\r\n      {name}\r\n      <label>Sign-Up Form</label>\r\n      <div>\r\n        Name <input type='text' onChange={(e) => {\r\n          e.preventDefault()\r\n          setName(e.target.value)\r\n        }} required ></input>\r\n      </div>\r\n      <div>\r\n        Email <input type='text' onChange={(e) => setEmail(e.target.value)} required ></input>\r\n      </div>\r\n      <button onClick={() => connectWallet()}>Connect</button>\r\n      <button onClick={async () => signmsg()}>Sign</button><br></br>\r\n      <div>{accessMsg}</div>\r\n\r\n\r\n\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}